#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#
#
# The configuration properties for the Galasa Ecosystem
#
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-config
data:
#
#
# The maximum running number of automation engines the Engine Controller will start
  max_engines: "{{ .Values.maxEngines }}"
#
# The label for the engine pods and the prefix of the engine names
  engine_label: "{{ .Release.Name }}-k8s-standard-engine"
#
  engine_image: "{{ .Values.galasaRegistry }}/{{ .Values.galasaBootImage }}:{{ .Values.galasaVersion }}"
  node_arch: "{{ .Values.architecture }}"
#  node_arch: ""
#  node_preferred_affinity: "beta.kubernetes.io/arch=s390x"
#  node_preferred_affinity: ""
#  scheduled_requestors: ""
#  engine_capabilities: ""


  # Best practice is to set resource (memory and CPU) limits for each pod.
  # So not too many pods get allocated to the same node, which may run slowly or run out of memory.
  # So we need to set several things:
  # How much memory the java heap needs. This is typically 50-100 mb less than the minimum memory we request for the pod. Integer. Units of 'Mi'.
  engine_memory_heap: "{{- .Values.testPod.memory.heap | default 350 -}}"
  # The minimum memory we expect to use. This is what we ask kubernetes for when the pod starts. Integer. Units of 'Mi'.
  engine_memory_request: "{{- .Values.testPod.memory.min | default 400 -}}"
  # The maximum memory we expect a test pod to use. This is a limit we set for the pod. Exceeding this limit will cause the pod to be killed. Integer. Units of 'Mi'.
  engine_memory_limit: "{{- .Values.testPod.memory.max | default 800 -}}"

  # The amount of CPU each test pods should get as a minimum. Integer. Units of 'm'. A value of 0 means we don't set the minimum.
  engine_cpu_request: "{{- .Values.testPod.cpu.min | default 600 -}}"
  # The amount of CPU each test pod is allowed to consume were it to be available. Integer. Units of 'm' A value of 0 means we don't set the limit.
  engine_cpu_limit: "{{- .Values.testPod.cpu.max | default 1000 -}}"

  # The amount of time in milliseconds to wait before the test pod scheduler launches another test pod
  kube_launch_interval_milliseconds: "{{ .Values.kubeLaunchIntervalMillisecs | default 1000 }}"

  # Maximum number a run will re-try to create a test pod.
  max_test_pod_retry_limit: "{{ .Values.enginecontroller.maxTestPodRetryLimit | default 5 }}"

  # The amount of time in seconds the engine controller will wait before it deletes an interrupted run's test pod
  interrupted_test_run_cleanup_grace_period_seconds: "{{ .Values.enginecontroller.interruptedTestRunCleanupGracePeriodSecs | default 300 }}"

  # The amount of time in minutes that test runs will be allowed to remain in the 'allocated' state before being cleaned up
  allocated_test_run_timeout_minutes: "{{ .Values.enginecontroller.allocatedTestRunTimeoutMinutes | default 30 }}"

  # The time between scheduling a bunch of queued tests in fresh test pods, and when we look again for more test pods to queue.
  # Unit is seconds. Defaults to 60 seconds if not set.
  run_poll: "5"

  # >> Not used. Please ignore. <<
  # Was used in the docker controller to space out requests to launch new docker pods. Unit is seconds.
  run_poll_recheck: "2"
#
# Label of k8s node that Galasa test pods should be scheduled on preferrentially
  galasa_node_preferred_affinity: "{{ .Values.k8sNodePreferredAffinity }}"
#
# List of node toleration conditions
  galasa_node_tolerations: "{{ .Values.k8sNodeTolerations }}"

#
# The name of the Kubernetes Secret that stores the encryption-related keys,
# so that test pods can decrypt credentials where necessary
  encryption_keys_secret_name: {{ include "ecosystem.encryption.keys.secret.name" . }}