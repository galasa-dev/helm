#
# Copyright contributors to the Galasa project 
#
#
# The External host name the Kubernetes NodePorts can be accessed on, can be an IP address
#
externalHostname: "example.com"
#
# The version of Galasa you want to run with, it is better that you do not use "latest" to ensure
# all the components are running the same version and a controlled upgrade can be performed
#
galasaVersion: "0.26.0"
#
#
# The container registry the Galasa images can be found in
#
galasaRegistry: "icr.io/galasadev"
#
#
# The pull policy to be used for the Galasa images, only useful for Galasa development purposes
#
pullPolicy: "IfNotPresent"
#
#
# The architecture the pods will be run on, at the moment, only adm64 is supported
#
architecture: amd64
#
#
# Any nodeselectors you wish to use to restrict the nodes the pods will run on
#
nodeSelectors: {}
#  tekton: build
#
#
# The storage class to be used for persistent volumes
#
storageClass: ""
#
#
# The size of the persistent volumes for the data stores
#
etcdDiskSize: "1Gi"
couchdbDiskSize: "10Gi"
catalogDiskSize: "1Gi"
#
#
# The image names and versions for the non-Galasa images
#
etcdImage: "quay.io/coreos/etcd:v3.2.25"
couchdbImage: "couchdb:2.3.1"
dexImage: "ghcr.io/dexidp/dex:v2.32.0"
#
#
# Values to enable and configure the use of ingress
# Note: The externalHostname value must be a valid DNS name for ingress to be used.
#
ingress:
  # Enables/disables the use of ingress
  enabled: true

  # Annotations to be added to ingresses
  annotations: {}
#
#
# Values to configure the ecosystem's use of Dex
#
dex:
  # NodePorts to access Dex services through (Helm will dynamically assign NodePorts in the 
  # 30000 to 32767 range if they are left blank).
  nodePorts:
    grpc: 32000
    http: # blank - dynamically assigned

  # The Dex configuration - See the [Dex documentation](https://dexidp.io/docs) for more information.
  config:
    issuer: http://example.com/dex
    storage:
      type: kubernetes
      config:
        inCluster: true

    # Enable Dex's gRPC API for clients to interact with.
    grpc:
      # The address of the exposed gRPC API server. Must be a valid {HOST}:{PORT} combination.
      addr: example.com:32000
      reflection: true
    
    # Default is set to use an example email and password.
    enablePasswordDB: true
    staticPasswords:
    - email: "admin@example.com"
      # bcrypt hash of the string "password": $(echo password | htpasswd -BinC 10 admin | cut -d: -f2)
      hash: "$2a$10$2b2cU8CPhOTaGrs1HRQuAueS7JTT5ZHsHSzYiFPm1leZck7Mc8T4W"
      username: "admin"
      userID: "08a8684b-db88-4b73-90a9-3cd1661f5466"
